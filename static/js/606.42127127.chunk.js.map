{"version":3,"file":"static/js/606.42127127.chunk.js","mappings":"oOA6FA,UAtFwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,CACrCC,gBAAiB,GACjBC,SAAU,GACVC,gBAAiB,KACjB,eAJKC,EAAS,KAAEC,EAAQ,KAMlBJ,EAA+CG,EAA/CH,gBAAiBC,EAA8BE,EAA9BF,SAAUC,EAAoBC,EAApBD,gBACnC,GAAyDG,EAAAA,EAAAA,KACvD,SAACC,GAAK,OAAKA,EAAMC,IAAI,IADfC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAO,EAAPA,SAI7CC,EAAAA,EAAAA,YAAU,WACJH,GACD,IAECC,GAAaH,GACfX,EAAS,cAEPY,GACD,IAEHd,GAASmB,EAAAA,EAAAA,MACX,GAAG,CAACjB,EAAUY,EAASD,EAAME,EAAWC,EAAWC,EAASjB,IAE5D,IAAMoB,EAAW,SAACC,GAChBA,EAAEC,iBACFb,GAAS,SAACc,GAAa,yBAClBA,GAAa,cACfF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,OAAK,GAEnC,EAWA,OACE,4BACE,sDACA,kBAAMC,SAZO,SAACN,GAChBA,EAAEC,iBACF,IAAMM,EAAe,CACnBvB,gBAAAA,EACAC,SAAAA,EACAC,gBAAAA,GAEFP,GAAS6B,EAAAA,EAAAA,IAAeD,GAC1B,EAI8BE,UAAU,kBAAiB,WACnD,gBAAKA,UAAU,wBAAuB,UACpC,kBACEC,KAAK,WACLC,GAAG,kBACHP,KAAK,kBACLC,MAAOrB,EACP4B,SAAUb,EACVc,YAAY,8BAGhB,gBAAKJ,UAAU,wBAAuB,UACpC,kBACEC,KAAK,WACLN,KAAK,WACLO,GAAG,WACHN,MAAOpB,EACP2B,SAAUb,EACVc,YAAY,0BAGhB,gBAAKJ,UAAU,wBAAuB,UACpC,kBACEC,KAAK,WACLC,GAAG,kBACHP,KAAK,kBACLC,MAAOnB,EACP0B,SAAUb,EACVc,YAAY,4BAGhB,gBAAKJ,UAAU,gDAA+C,UAC5D,kBAAOC,KAAK,kBAKtB,C","sources":["component/Passwordsetting.jsx"],"sourcesContent":["import { useState, React, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './dashboard.css';\r\nimport { reset, updatePassword } from '../reducers/authSlice';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\nconst Passwordsetting = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [prevstate, setstate] = useState({\r\n    passwordCurrent: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  const { passwordCurrent, password, passwordConfirm } = prevstate;\r\n  const { user, isError, isLoading, isSuccess, message } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      <Loading />;\r\n    }\r\n    if (isSuccess && user) {\r\n      navigate('/dashboard');\r\n    }\r\n    if (isError) {\r\n      <Error />;\r\n    }\r\n    dispatch(reset());\r\n  }, [navigate, isError, user, isLoading, isSuccess, message, dispatch]);\r\n\r\n  const onchange = (e) => {\r\n    e.preventDefault();\r\n    setstate((previousstate) => ({\r\n      ...previousstate,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const passwordData = {\r\n      passwordCurrent,\r\n      password,\r\n      passwordConfirm,\r\n    };\r\n    dispatch(updatePassword(passwordData));\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Hello to password Update</h1>\r\n      <form onSubmit={onSubmit} className=\"password_update\">\r\n        <div className=\"password_update_input\">\r\n          <input\r\n            type=\"password\"\r\n            id=\"passwordCurrent\"\r\n            name=\"passwordCurrent\"\r\n            value={passwordCurrent}\r\n            onChange={onchange}\r\n            placeholder=\"Enter Current password\"\r\n          />\r\n        </div>\r\n        <div className=\"password_update_input\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={onchange}\r\n            placeholder=\"Enter new password\"\r\n          />\r\n        </div>\r\n        <div className=\"password_update_input\">\r\n          <input\r\n            type=\"password\"\r\n            id=\"passwordConfirm\"\r\n            name=\"passwordConfirm\"\r\n            value={passwordConfirm}\r\n            onChange={onchange}\r\n            placeholder=\"Confirm new password\"\r\n          />\r\n        </div>\r\n        <div className=\"password_update_button  password_update_input\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Passwordsetting;\r\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useState","passwordCurrent","password","passwordConfirm","prevstate","setstate","useSelector","state","auth","user","isError","isLoading","isSuccess","message","useEffect","reset","onchange","e","preventDefault","previousstate","target","name","value","onSubmit","passwordData","updatePassword","className","type","id","onChange","placeholder"],"sourceRoot":""}