{"version":3,"file":"static/js/928.00825fe5.chunk.js","mappings":"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","sources":["component/Tourdetailpage.jsx","component/Tourpage.jsx"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"./tourdetail.css\";\r\n// import GradeIcon from '@mui/icons-material/Grade';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\n// import { experimentalStyled } from '@mui/material';\r\n\r\nconst Tourdetailpage = () => {\r\n  const params = useLocation();\r\n  const navigate = useNavigate();\r\n  const tourdetail = JSON.parse(localStorage.getItem(\"tourdetail\"));\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  // console.log(details);\r\n  const [writeReview, setwriteReview] = useState(true);\r\n  const [reviewdata, setreviewdata] = useState({\r\n    review: \"\",\r\n    rating: \"\",\r\n  });\r\n\r\n  const { review, rating } = reviewdata;\r\n  var j = 1;\r\n\r\n  // tourdetail.tour[3].map((userid, index) => {\r\n  //   console.log(userid);\r\n  // });\r\n\r\n  const onchangereview = (e) => {\r\n    e.preventDefault();\r\n    setreviewdata((prevreview) => ({\r\n      ...prevreview,\r\n      [e.target.name]: e.target.value,\r\n      user: user.id,\r\n      tour: tourdetail.tour._id,\r\n    }));\r\n  };\r\n\r\n  const writeReviews = async (data) => {\r\n    let token = user.token;\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8000/api/v1/reviews\",\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // window.location.reload();\r\n      return response;\r\n    } catch (error) {\r\n      console.warn(error.message);\r\n    }\r\n  };\r\n  const onSubmitreview = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (reviewdata.review.match(/\\S/g) == null) {\r\n      return (\r\n        // window.alert('you not written any review..'),\r\n        setwriteReview(!writeReview)\r\n      );\r\n    } else {\r\n      writeReviews(reviewdata);\r\n      setreviewdata(!writeReview);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n  let i = 0;\r\n\r\n  const bookTour = async (tourId) => {\r\n    let token = user.token;\r\n\r\n    try {\r\n      const stripePromise = await loadStripe(\r\n        \"pk_test_51LhXM5SBrxf9grZuKlaBjNwd4LPft9O4c06bUKX8eBsgSBgcxaxMcm2jDFZZtTcRmVitjammnAkHhD19KLepU0ns00ZPAKOmmI\"\r\n      );\r\n      // 1) Get checkout session from API\r\n      const session = await axios.get(\r\n        `http://127.0.0.1:8000/api/v1/bookings/checkout-session/${tourId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const stripe = await stripePromise;\r\n      await stripe.redirectToCheckout({\r\n        sessionId: session.data.session.id,\r\n      });\r\n      return session;\r\n    } catch (err) {\r\n      <Error error={err.message} />;\r\n    }\r\n  };\r\n\r\n  const BookTours = (e) => {\r\n    e.preventDefault();\r\n\r\n    const Id = e.target.getAttribute(\"data-tourid\");\r\n    bookTour(Id);\r\n    console.log(Id);\r\n  };\r\n  if (user) {\r\n    return (\r\n      <>\r\n        <div className=\"detail_container\">\r\n          <div className=\"detail_cover\">\r\n            <span> {tourdetail.tour.name} </span>{\" \"}\r\n            <img\r\n              src={`./Abhishek-stark-reactapp/${tourdetail.tour.imageCover}`}\r\n              alt=\"\"\r\n              className=\"image_cover_class\"\r\n            />\r\n          </div>{\" \"}\r\n          <div className=\"tour_detail\">\r\n            <h1>About Tour</h1>\r\n            <div> {tourdetail.tour.description} </div>{\" \"}\r\n          </div>{\" \"}\r\n          <div className=\"tour_image_container\">\r\n            {tourdetail.tour.images.map((e, index) => {\r\n              i++;\r\n              return (\r\n                <img\r\n                  key={index}\r\n                  src={`./Abhishek-stark-reactapp/${e}`}\r\n                  alt=\"user_img\"\r\n                  className=\" tour_images \"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"tour_btn_and_carddetail\">\r\n            {tourdetail.tour.guides.map((guidence, index) => {\r\n              return (\r\n                <div className=\"detail_card\" key={index}>\r\n                  <div key={index}>\r\n                    <div className=\"guide_image\">\r\n                      <img\r\n                        src={`./Abhishek-stark-reactapp/${guidence.photo}`}\r\n                        alt=\"GuidesImg\"\r\n                      />\r\n                    </div>\r\n                    <span style={{ color: \"yellow\" }}>{guidence.name}</span>\r\n                  </div>\r\n                  <div className=\"price\">Price:{guidence.price} </div>{\" \"}\r\n                  <span>{` Duration |${guidence.duration} days`}</span>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            <div className=\"book_tour_button\">\r\n              <div className=\"bok_btn_user_img\">\r\n                <img\r\n                  src={`./Abhishek-stark-reactapp/${user.photo}`}\r\n                  alt=\"user_img\"\r\n                />\r\n              </div>\r\n              <p>Book your Tour now and enjoy your Weekend ...</p>\r\n              <button\r\n                className=\"booktour_btn\"\r\n                data-tourid={tourdetail.tour.id}\r\n                onClick={BookTours}\r\n              >\r\n                Book Tour\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"reviews_border\">Reviews...</h3>\r\n          </div>\r\n          <footer className=\"reviews_and_reviewarea\">\r\n            {tourdetail.tour.reviews.map((e, i) => {\r\n              const { review, user } = e;\r\n              return (\r\n                <div className=\"review_card\" key={i}>\r\n                  <div className=\"review_img_cover\">\r\n                    <img\r\n                      src={`./Abhishek-stark-reactapp/${user.photo}`}\r\n                      alt=\"user_img\"\r\n                      className=\"review_user_img\"\r\n                    />\r\n                  </div>\r\n                  <h3>{user.name}</h3>\r\n                  <p>{review}</p>\r\n                  <span>AverageRating: {tourdetail.tour.ratingsAverage}</span>\r\n                  <div className=\"rating_star\">\r\n                    <h3>gradeIcon</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <section className=\"footer_card\">\r\n              {writeReview ? (\r\n                <button\r\n                  id=\"add_review_btn\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    tourdetail.tour.reviews.map((value) => {\r\n                      if (value.user._id === user.id) {\r\n                        window.alert(\"you already written review\");\r\n                        console.log(\"under if\");\r\n                        setwriteReview(true);\r\n                      }\r\n\r\n                      if (value.user._id !== user.id) {\r\n                        setwriteReview(false);\r\n                        console.log(\"under else\");\r\n                        setreviewdata({\r\n                          review: \"\",\r\n                          rating: \"\",\r\n                        });\r\n                      }\r\n                    });\r\n                    // setwriteReview(false);\r\n                    // console.log('under else');\r\n                    // setreviewdata({\r\n                    //   review: '',\r\n                    //   rating: '',\r\n                    // });\r\n                    //\r\n                  }}\r\n                >\r\n                  Write Review\r\n                </button>\r\n              ) : null}\r\n              {!writeReview ? (\r\n                <form onSubmit={onSubmitreview}>\r\n                  <div>\r\n                    <textarea\r\n                      name=\"review\"\r\n                      id=\"review\"\r\n                      value={review}\r\n                      cols=\"30\"\r\n                      rows=\"10\"\r\n                      onChange={onchangereview}\r\n                    ></textarea>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"rating\"\r\n                      id=\"rating\"\r\n                      value={rating}\r\n                      onChange={onchangereview}\r\n                    ></input>\r\n                    <button type=\"submit\" id=\"review_submit_btn\">\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              ) : null}\r\n            </section>\r\n          </footer>\r\n        </div>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Tourdetailpage;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./tourpage.css\";\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\nimport Tourdetailpage from \"./Tourdetailpage\";\r\n\r\nconst Tourpage = () => {\r\n  const params = useLocation();\r\n  // console.log(params);\r\n  const [tour, settour] = useState();\r\n  // const [tourdetails, settourdetails] = useState({\r\n  //   descriptions: '',\r\n  //   difficultys: '',\r\n  // });\r\n  const navigate = useNavigate();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const getTour = async () => {\r\n    try {\r\n      const response = await axios.get(\"https://apifortour.onrender.com/\");\r\n      if (response.data) {\r\n        settour(response.data.tours);\r\n      }\r\n      // https://apifortour.onrender.com/\r\n\r\n      // http://localhost:8000/api/v1/tours\r\n    } catch (err) {\r\n      <Error />;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTour();\r\n  }, []);\r\n\r\n  if (tour) {\r\n    return (\r\n      <>\r\n        <div className=\"banner_container\">\r\n          <div className=\"banner\">\r\n            {tour.map((tour, index) => {\r\n              return (\r\n                <div className=\"wrapper\" key={index}>\r\n                  <div className=\"img_cover_and_name\">\r\n                    <img\r\n                      src={`./Abhishek-stark-reactapp/${tour.imageCover}`}\r\n                      alt={tour.name}\r\n                    />\r\n                    <h2> {tour.name} </h2>\r\n                  </div>\r\n                  <div className=\"price_and_summary\">\r\n                    <span className=\"price_class\">\r\n                      {`${tour.difficulty} ${tour.duration}-day tour`}{\" \"}\r\n                    </span>\r\n                    <p id=\"summary_id\"> {tour.summary} </p>\r\n                  </div>{\" \"}\r\n                  <div id=\"tour_detail_id\">\r\n                    <div>\r\n                      <span> Stopage </span>{\" \"}\r\n                      <h3> {tour.maxGroupSize} - people </h3>{\" \"}\r\n                    </div>{\" \"}\r\n                    <div>\r\n                      <span> Location </span> <h3> {Date.now()}</h3>\r\n                    </div>\r\n                  </div>{\" \"}\r\n                  <div className=\"details\">\r\n                    <div id=\"price_and_rating\">\r\n                      <span>\r\n                        {\" \"}\r\n                        {tour.price}\r\n                        Rs / per person{\" \"}\r\n                      </span>\r\n                      <h3>\r\n                        {tour.ratingAverage}\r\n                        rating\r\n                      </h3>{\" \"}\r\n                    </div>{\" \"}\r\n                    <button\r\n                      onClick={async (e) => {\r\n                        e.preventDefault();\r\n                        try {\r\n                          const response = await axios.get(\r\n                            `https://apifortour.onrender.com/tour/${tour.slug}`\r\n                          );\r\n                          if (response) {\r\n                            // console.log(response);\r\n                            if (user)\r\n                              localStorage.setItem(\r\n                                \"tourdetail\",\r\n                                JSON.stringify(response.data)\r\n                              );\r\n                            // settourdetails(...[response.data]);\r\n                            // console.log(tourdetails);\r\n                            // const { tour } = response.data;\r\n                            // settourdetails({\r\n                            //   descriptions: `${tour.description}`,\r\n                            //   difficultys: tour,\r\n                            // });\r\n                            // console.log(tour);\r\n                            // console.log(tourdetails);\r\n\r\n                            navigate(\"/tourdetail\");\r\n                          }\r\n                        } catch (err) {\r\n                          <Error error={err.message} />;\r\n                        }\r\n                      }}\r\n                    >\r\n                      Details{\" \"}\r\n                    </button>{\" \"}\r\n                  </div>{\" \"}\r\n                </div>\r\n              );\r\n            })}{\" \"}\r\n          </div>{\" \"}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*if (!user) {\r\n    return (\r\n      <>\r\n        <h1> you are not login Please Login to Book your Tour </h1>\r\n      </>\r\n    );\r\n  }*/\r\n};\r\n\r\nexport default Tourpage;\r\n"],"names":["useLocation","navigate","useNavigate","tourdetail","JSON","parse","localStorage","getItem","user","useState","writeReview","setwriteReview","review","rating","reviewdata","setreviewdata","onchangereview","e","preventDefault","prevreview","target","name","value","id","tour","_id","writeReviews","data","token","axios","headers","Authorization","response","console","warn","message","bookTour","tourId","loadStripe","stripePromise","session","stripe","redirectToCheckout","sessionId","Error","className","src","imageCover","alt","description","images","map","index","guides","guidence","photo","style","color","price","duration","onClick","Id","getAttribute","log","reviews","i","ratingsAverage","window","alert","onSubmit","match","cols","rows","onChange","type","settour","useSelector","state","auth","getTour","tours","useEffect","difficulty","summary","maxGroupSize","Date","now","ratingAverage","slug","setItem","stringify"],"sourceRoot":""}