{"version":3,"file":"static/js/928.20cb57ef.chunk.js","mappings":"kIAUA,IARc,SAAH,GAAmB,IAAbA,EAAK,EAALA,MACf,OACE,0BACE,wBAAKA,KAGX,C,iKC+GA,EA/GiB,WAGf,OAAwBC,EAAAA,EAAAA,YAAU,eAA3BC,EAAI,KAAEC,EAAO,KAEdC,GAAWC,EAAAA,EAAAA,MAETC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAA1CH,KACFI,EAAO,yCAAG,kHAEWC,EAAAA,EAAAA,IAAU,oCAAoC,KAAD,GAA9DC,EAAQ,QACDC,MACXV,EAAQS,EAASC,KAAKC,OAIxB,gDAECC,EAAA,EAAS,yDAEb,kBAZY,mCAkBb,IAJAC,EAAAA,EAAAA,YAAU,WACRN,GACF,GAAG,IAECR,EACF,OACE,+BACE,iBAAKe,UAAU,mBAAkB,WAC/B,iBAAKA,UAAU,SAAQ,UACpBf,EAAKgB,KAAI,SAAChB,EAAMiB,GACf,OACE,iBAAKF,UAAU,UAAS,WACtB,iBAAKA,UAAU,qBAAoB,WACjC,gBACEG,IAAG,oCAA+BlB,EAAKmB,YACvCC,IAAKpB,EAAKqB,QAEZ,8BAAMrB,EAAKqB,KAAI,WAEjB,iBAAKN,UAAU,oBAAmB,WAChC,kBAAMA,UAAU,cAAa,oBACvBf,EAAKsB,WAAU,YAAItB,EAAKuB,SAAQ,aAAa,QAEnD,eAAGC,GAAG,aAAY,cAAGxB,EAAKyB,QAAO,UAC5B,KACP,iBAAKD,GAAG,iBAAgB,WACtB,4BACE,wCAAuB,KACvB,8BAAMxB,EAAK0B,aAAY,gBAAiB,OACnC,KACP,4BACE,yCAAuB,KAAC,8BAAMC,KAAKC,eAEhC,KACP,iBAAKb,UAAU,UAAS,WACtB,iBAAKS,GAAG,mBAAkB,WACxB,4BACG,IACAxB,EAAK6B,MAAK,kBACK,QAElB,0BACG7B,EAAK8B,cAAa,YAEf,OACD,KACP,oBACEC,QAAO,yCAAE,WAAOC,GAAC,4EACI,OAAnBA,EAAEC,iBAAiB,kBAEMxB,EAAAA,EAAAA,IAAU,wCAAD,OACUT,EAAKkC,OAC7C,KAAD,GAFKxB,EAAQ,UAKRN,GACF+B,aAAaC,QACX,aACAC,KAAKC,UAAU5B,EAASC,OAG5BT,EAAS,gBACV,gDAEAW,EAAA,EAAa,KAAI0B,QAAY,yDAEjC,mDAnBM,GAmBL,oBAEM,OACA,OACL,MA3DqBtB,EA8DlC,IAAI,OACC,QAajB,C","sources":["component/Error.jsx","component/Tourpage.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({ error }) => {\r\n  return (\r\n    <div>\r\n      <h2>{error}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./tourpage.css\";\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\n\r\nconst Tourpage = () => {\r\n  // const params = useLocation();\r\n  // console.log(params);\r\n  const [tour, settour] = useState();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const getTour = async () => {\r\n    try {\r\n      const response = await axios.get(\"https://apifortour.onrender.com/\");\r\n      if (response.data) {\r\n        settour(response.data.tours);\r\n      }\r\n      // https://apifortour.onrender.com/\r\n\r\n      // http://localhost:8000/api/v1/tours\r\n    } catch (err) {\r\n      <Error />;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTour();\r\n  }, []);\r\n\r\n  if (tour) {\r\n    return (\r\n      <>\r\n        <div className=\"banner_container\">\r\n          <div className=\"banner\">\r\n            {tour.map((tour, index) => {\r\n              return (\r\n                <div className=\"wrapper\" key={index}>\r\n                  <div className=\"img_cover_and_name\">\r\n                    <img\r\n                      src={`./Abhishek-stark-reactapp/${tour.imageCover}`}\r\n                      alt={tour.name}\r\n                    />\r\n                    <h2> {tour.name} </h2>\r\n                  </div>\r\n                  <div className=\"price_and_summary\">\r\n                    <span className=\"price_class\">\r\n                      {`${tour.difficulty} ${tour.duration}-day tour`}{\" \"}\r\n                    </span>\r\n                    <p id=\"summary_id\"> {tour.summary} </p>\r\n                  </div>{\" \"}\r\n                  <div id=\"tour_detail_id\">\r\n                    <div>\r\n                      <span> Stopage </span>{\" \"}\r\n                      <h3> {tour.maxGroupSize} - people </h3>{\" \"}\r\n                    </div>{\" \"}\r\n                    <div>\r\n                      <span> Location </span> <h3> {Date.now()}</h3>\r\n                    </div>\r\n                  </div>{\" \"}\r\n                  <div className=\"details\">\r\n                    <div id=\"price_and_rating\">\r\n                      <span>\r\n                        {\" \"}\r\n                        {tour.price}\r\n                        Rs / per person{\" \"}\r\n                      </span>\r\n                      <h3>\r\n                        {tour.ratingAverage}\r\n                        rating\r\n                      </h3>{\" \"}\r\n                    </div>{\" \"}\r\n                    <button\r\n                      onClick={async (e) => {\r\n                        e.preventDefault();\r\n                        try {\r\n                          const response = await axios.get(\r\n                            `https://apifortour.onrender.com/tour/${tour.slug}`\r\n                          );\r\n                          if (response) {\r\n                            // console.log(response);\r\n                            if (user)\r\n                              localStorage.setItem(\r\n                                \"tourdetail\",\r\n                                JSON.stringify(response.data)\r\n                              );\r\n\r\n                            navigate(\"/tourdetail\");\r\n                          }\r\n                        } catch (err) {\r\n                          <Error error={err.message} />;\r\n                        }\r\n                      }}\r\n                    >\r\n                      Details{\" \"}\r\n                    </button>{\" \"}\r\n                  </div>{\" \"}\r\n                </div>\r\n              );\r\n            })}{\" \"}\r\n          </div>{\" \"}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*if (!user) {\r\n    return (\r\n      <>\r\n        <h1> you are not login Please Login to Book your Tour </h1>\r\n      </>\r\n    );\r\n  }*/\r\n};\r\n\r\nexport default Tourpage;\r\n"],"names":["error","useState","tour","settour","navigate","useNavigate","user","useSelector","state","auth","getTour","axios","response","data","tours","Error","useEffect","className","map","index","src","imageCover","alt","name","difficulty","duration","id","summary","maxGroupSize","Date","now","price","ratingAverage","onClick","e","preventDefault","slug","localStorage","setItem","JSON","stringify","message"],"sourceRoot":""}